#include <windows.h>
#include <stdio.h>


int main(int argc, char** argv) {
    // 1. Define Messagebox shellcode (x86)
    unsigned char shellcode[] = "";

    // 2. Allocate memory for shellcode using VirtualAlloc
    LPVOID allocated_mem = VirtualAlloc(NULL, sizeof(shellcode), (MEM_COMMIT | MEM_RESERVE), PAGE_EXECUTE_READWRITE);

    if (allocated_mem == NULL) {
        printf("Failed to allocate memory: %d\n", GetLastError());
        return 1;
    }

    printf("Memory Allocated at address: 0x%p\n", allocated_mem);

    // 3. Write shellcode to allocated memory
    RtlCopyMemory(allocated_mem, shellcode, sizeof(shellcode));

    printf("Shellcode written to allocated memory.\n");

    // 4. Create thread to execute the shellcode
    HANDLE thread_handle = CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE)allocated_mem, NULL, 0, NULL);

    if (thread_handle == NULL) {
        printf("Failed to create thread: %d\n", GetLastError());
        VirtualFree(allocated_mem, 0, MEM_RELEASE);
        return 1;
    }

    // 5. Halt execution until created thread returns
    WaitForSingleObject(thread_handle, INFINITE);

    // 6. Close handle to thread
    CloseHandle(thread_handle);

    // 7. Free allocated memory
    VirtualFree(allocated_mem, 0, MEM_RELEASE);

    return 0;
}
